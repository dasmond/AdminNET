{
	"compilerOptions": {
		/* Visit https://aka.ms/tsconfig.json to read more about this file */

		/* 编译选项 */
		// "incremental": true,                   /* 启用增量编译 */
		"target": "esnext" /* 指定ECMAScript目标版本：“ES3”（默认）、“ES5”、“ES2015”、“ES 2016”、“ES2017”、“ESD 2018”、“es 2019”、“ES2020”或“ESNEXT”. */,
		"module": "esnext" /* 指定模块代码生成：'none'、'commonjs'、'amd'、'system'、'umd'、's2015'、'es2020'或'ESNext'. */,
		"lib": ["esnext", "dom", "dom.iterable", "scripthost"] /* 指定要包含在编译中的库文件. */,
		"allowJs": true /* 允许编译javascript文件. */,
		// "checkJs": true,                       /* 报告.js文件中的错误. */
		"jsx": "preserve" /* 指定JSX代码生成：“preserve”、“react native”或“react”. */,
		// "declaration": true 										/* 生成相应的“.d.ts”文件. */,
		// "declarationMap": true,                /* 为每个相应的“.d.ts”文件生成源映射. */
		"sourceMap": true /* 生成相应的“.map”文件. */,
		// "outFile": "./",                       /* 将输出连接并发送到单个文件. */
		// "outDir": "./",                        /* 将输出结构重定向到目录. */
		// "rootDir": "./",                       /* 指定输入文件的根目录。用于使用--outDir控制输出目录结构. */
		// "composite": true,                     /* 启用项目编译 */
		// "tsBuildInfoFile": "./",               /* 指定用于存储增量编译信息的文件 */
		"removeComments": true /* 是否移除输出文件中的注释. */,
		// "noEmit": true,                        /* 是否不生成输出文件. */
		// "importHelpers": true 									/* 是否导入emit帮助函数. */,
		// "downlevelIteration": true 						/* 是否在目标为ES5或ES3时提供完全的for-of、展开和析构支持. */,
		"isolatedModules": true /* 是否将每个文件作为单独的模块进行编译. */,

		/* 严格类型检查选项 */
		"allowImportingTsExtensions": true,
		"strict": true /* 是否启用所有严格类型检查选项. */,
		"noImplicitAny": false /* 是否在表达式和声明中 implied 'any'类型时引发错误. */,
		// "strictNullChecks": true,              /* 是否启用严格空检查. */
		"strictFunctionTypes": false /* 是否启用严格函数类型检查. */,
		// "strictBindCallApply": true,           /* 是否启用严格'bind'、'call'和'apply'方法检查. */
		// "strictPropertyInitialization": true,  /* 是否启用严格类属性初始化检查. */
		// "noImplicitThis": true,                /* 是否在'this'表达式中 implied 'any'类型时引发错误. */
		// "alwaysStrict": true,                  /* 是否在严格模式下解析并 emit "use strict" for each source file. */

		/* 附加检查 */
		"noUnusedLocals": true /* 是否报告未使用的局部变量错误. */,
		"noUnusedParameters": true /* 是否报告未使用的参数错误. */,
		// "noImplicitReturns": true,             /* 是否报告函数未返回值错误. */
		// "noFallthroughCasesInSwitch": true,    /* 是否报告switch语句中的fallthrough情况错误. */
		// "noUncheckedIndexedAccess": true,      /* 是否在索引签名结果中包含'undefined'. */

		/* 模块解析选项 */
		"moduleResolution": "node" /* 指定模块解析策略：'node'（Node.js）或'classic'（TypeScript pre-1.6）. */,
		"baseUrl": "." /* 指定解析非绝对模块名的基本目录. */,
		"paths": {
			"/@/*": ["src/*"]
		} /* 一个系列入口，用于重映射导入以查找相对于'baseUrl'的相对位置. */,
		// "rootDirs": [],                        /* 指定根文件夹，其组合内容表示运行时项目的结构. */
		// "typeRoots": [],                       /* 指定包含类型定义文件的文件夹列表. */
		"types": ["vite/client"] /* 要包含在编译中的类型声明文件. */,
		"allowSyntheticDefaultImports": true /* 是否允许从没有默认导出的模块中默认导入. */,
		"esModuleInterop": true /* 是否启用UMD全局访问. */,
		// "preserveSymlinks": true,              /* 不解析符号链接的真实路径. */
		// "allowUmdGlobalAccess": true,          /* 允许从模块访问UMD全局. */

		/* 源码映射选项 */
		// "sourceRoot": "",                      /* 指定调试器应 locate TypeScript files 的位置，而不是源位置. */
		// "mapRoot": "",                         /* 指定调试器应 locate map files 的位置，而不是生成的位置. */
		// "inlineSourceMap": true,               /* 是否将源码映射内联到输出文件中. */
		// "inlineSources": true,                 /* 是否将源文件与源码映射一起内联到输出文件中. */

		/* 实验性选项 */
		"experimentalDecorators": true /* 是否启用ES7装饰器支持. */,
		// "emitDecoratorMetadata": true,         /* 是否启用emit type metadata for decorators. */

		/* 高级选项 */
		"skipLibCheck": true /* 是否跳过声明文件类型检查. */,
		"forceConsistentCasingInFileNames": true /* 是否强制文件名大小写一致. */
	},
	"include": ["src/**/*.ts", "src/**/*.vue", "src/**/*.tsx", "src/**/*.d.ts"] /* 指定要编译的文件路径，支持通配符. */,
	"exclude": ["node_modules", "dist"] /* 指定不需要编译的文件目录 */
}
