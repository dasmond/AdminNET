import {useBaseApi} from '/@@/api/base';

// @(Model.BusName)接口服务
export const use@(Model.ClassName)Api = () => {
	const baseApi = useBaseApi("@(Model.LowerClassName)");
	return {
		// 分页查询@(Model.BusName)
		page: baseApi.page,
		// 查看@(Model.BusName)详细
		detail: baseApi.detail,
		// 新增@(Model.BusName)
		add: baseApi.add,
		// 更新@(Model.BusName)
		update: baseApi.update,
		@if (Model.HasSetStatus) {
		@:// 设置@(Model.BusName)状态
		@:setStatus: baseApi.setStatus,
		}
		// 删除@(Model.BusName)
		delete: baseApi.delete,
		// 批量删除@(Model.BusName)
		batchDelete: baseApi.batchDelete,
		@if (Model.ImportFieldList.Count > 0) {
		@:// 导入@(Model.BusName)数据
		@:importData: baseApi.importData,
		@:// 下载@(Model.BusName)数据导入模板
		@:downloadTemplate: baseApi.downloadTemplate,
		}
		@foreach (var column in Model.TableField) {
		if (column.EffectType == "Upload") {
		@:// 上传@(column.ColumnComment)
		@:upload@(column.PropertyName): (params: any) => baseApi.uploadFile(params, baseApi.baseUrl + 'upload@(column.PropertyName)'),
		} else if (column.EffectType == "ForeignKey" && (column.WhetherAddUpdate == "Y" || column.WhetherQuery == "Y")) {
		var dropdownName = $"{column.FkEntityName}{column.PropertyName.TrimEnd("Id")}Dropdown";
		@:// 获取@(column.ColumnComment)选择数据
		@:get@(dropdownName): (all: Boolean = false) => baseApi.request({
			@:url: baseApi.baseUrl + '@Model.ToLowerFirstLetter(dropdownName)',
			@:params: { all },
			@:method: 'get',
		@:}),
		}
		}
		@foreach (var column in Model.TableField.Where(c => c.EffectType == "ApiTreeSelector").DistinctBy(c => c.FkEntityName)) {
		@:// 获取@(column.ColumnComment)选择数据
		@:get@(column.FkEntityName)Tree: () => baseApi.request({
			@:url: baseApi.baseUrl + '@Model.ToLowerFirstLetter(column.FkEntityName)Tree',
			@:method: 'get',
		@:}),
		}
	}
}