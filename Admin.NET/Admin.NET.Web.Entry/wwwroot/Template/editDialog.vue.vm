<template>
  <div class="ComFund-container">
    <el-dialog v-model="isShowDialog" :title="props.title" :width="700" draggable>
      <el-form
        :model="ruleForm"
        ref="ruleFormRef"
        size="default"
        label-width="100px"
        :rules="rules"
      >
        <el-row :gutter="35">
          <el-form-item v-show="false"><el-input v-model="ruleForm.Id" /></el-form-item>
          <el-col :xs="24" :sm="12" :md="12" :lg="12" :xl="12" class="mb20">
            <el-form-item label="基金编号" prop="code">
              <el-input v-model="ruleForm.code" placeholder="ruleForm.code" clearable />
            </el-form-item>
          </el-col>
          <el-col :xs="24" :sm="12" :md="12" :lg="12" :xl="12" class="mb20">
            <el-form-item label="基金名称">
              <el-input v-model="ruleForm.Name" placeholder="ruleForm.Name" clearable />
            </el-form-item>
          </el-col>
          <el-col :xs="24" :sm="12" :md="12" :lg="12" :xl="12" class="mb20">
            <el-form-item label="基金类型">
              <el-input v-model="ruleForm.Type" placeholder="ruleForm.Type" clearable />
            </el-form-item>
          </el-col>
          <el-col :xs="24" :sm="12" :md="12" :lg="12" :xl="12" class="mb20">
            <el-form-item label=" 评论 天天基金">
              <el-input
                v-model="ruleForm.Comments"
                placeholder="ruleForm.Comments"
                clearable
              />
            </el-form-item>
          </el-col>
          <el-col :xs="24" :sm="12" :md="12" :lg="12" :xl="12" class="mb20">
            <el-form-item label="基金评级">
              <el-input
                v-model="ruleForm.RLEVEL_SZ"
                placeholder="ruleForm.RLEVEL_SZ"
                clearable
              />
            </el-form-item>
          </el-col>
          <el-col :xs="24" :sm="12" :md="12" :lg="12" :xl="12" class="mb20">
            <el-form-item label="单位净值">
              <el-input
                v-model="ruleForm.NetValue"
                placeholder="ruleForm.NetValue"
                clearable
              />
            </el-form-item>
          </el-col>
          <el-col :xs="24" :sm="12" :md="12" :lg="12" :xl="12" class="mb20">
            <el-form-item label="净值日期 ">
              <el-input
                v-model="ruleForm.NetValueDate"
                placeholder="ruleForm.NetValueDate"
                clearable
              />
            </el-form-item>
          </el-col>
          <el-col :xs="24" :sm="12" :md="12" :lg="12" :xl="12" class="mb20">
            <el-form-item label="上次净值">
              <el-input
                v-model="ruleForm.NetValuePre"
                placeholder="ruleForm.NetValuePre"
                clearable
              />
            </el-form-item>
          </el-col>
          <el-col :xs="24" :sm="12" :md="12" :lg="12" :xl="12" class="mb20">
            <el-form-item label="净值日期  上次日期">
              <el-input
                v-model="ruleForm.NetValueDatePre"
                placeholder="ruleForm.NetValueDatePre"
                clearable
              />
            </el-form-item>
          </el-col>
          <el-col :xs="24" :sm="12" :md="12" :lg="12" :xl="12" class="mb20">
            <el-form-item label="基金分类">
              <el-input v-model="ruleForm.Tag" placeholder="ruleForm.Tag" clearable />
            </el-form-item>
          </el-col>
        </el-row>
      </el-form>
      <template #footer>
        <span class="dialog-footer">
          <el-button @click="cancel" size="default">取 消</el-button>
          <el-button type="primary" @click="submit" size="default">确 定</el-button>
        </span>
      </template>
    </el-dialog>
  </div>
</template>

<script lang="ts" setup>
import { ref } from "vue";
import { ElMessage } from "element-plus";
import type { FormRules } from "element-plus";
import { addComFund, updateComFund } from "/@/api/main/ComFund";

var props = defineProps({
  title: {
    type: String,
    default: "",
  },
});
const emit = defineEmits(["reloadTable"]);
const ruleFormRef = ref();
const isShowDialog = ref(false);
const ruleForm = ref<any>({});

const rules = ref<FormRules>({
  code: [{ required: true, message: "Please input Activity name", trigger: "blur" }],
});

// 打开弹窗
const openDialog = (row: any) => {
  ruleForm.value = row;
  isShowDialog.value = true;
};

// 关闭弹窗
const closeDialog = () => {
  emit("reloadTable");
  isShowDialog.value = false;
};

// 取消
const cancel = () => {
  isShowDialog.value = false;
};

// 提交
const submit = async () => {
  ruleFormRef.value.validate(async (isValid: boolean, fields?: any) => {
    if (isValid) {
      let values = ruleForm.value;
      if (ruleForm.value.id != undefined && ruleForm.value.id > 0) {
        await updateComFund(values);
      } else {
        await addComFund(values);
      }
      closeDialog();
    } else {
      ElMessage({
        message: `表单有${Object.keys(fields).length}处验证失败，请修改后再提交`,
        type: "error",
      });
    }
  });
};

//将属性或者函数暴露给父组件
defineExpose({ openDialog });
</script>
