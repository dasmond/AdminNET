<template>
  <BasicModal v-bind="$attrs" @@register="registerModal" :title="getTitle" @@ok="handleSubmit">
    <BasicForm @@register="registerForm" />
  </BasicModal>
</template>
<script lang="ts">
  import { defineComponent, ref, computed, unref } from 'vue';
  import { BasicModal, useModalInner } from '/@@/components/Modal';
  import { BasicForm, useForm } from '/@@/components/Form/index';
  import { formSchema } from './data.data';
  import { add@(@Model.ClassName), update@(@Model.ClassName) } from '/@@/api/modular/main/@(@Model.ClassName)';
  import { useMessage } from '/@@/hooks/web/useMessage';

  export default defineComponent({
    components: { BasicModal, BasicForm },
    emits: ['success', 'register'],
    setup(_, { emit }) {
      const isUpdate = ref(true);
      const { createMessage } = useMessage();
      const { info, success, warning, error } = createMessage;
      const [registerForm, { setFieldsValue, resetFields, validate }] = useForm({
        labelWidth: 100,
        schemas: formSchema,
        showActionButtonGroup: false,
        actionColOptions: {
          span: 23,
        },
        });
      const [registerModal, { setModalProps, closeModal }] = useModalInner(async (data) => {
        resetFields();
        setModalProps({ confirmLoading: false });
        isUpdate.value = !!data?.isUpdate;
        if (unref(isUpdate)) {
          setFieldsValue({
            ...data.record,
          });
        }
      });
      const getTitle = computed(() => (!unref(isUpdate) ? '新增@(@Model.BusName)' : '编辑@(@Model.BusName)'));
      async function handleSubmit() {
        try { 
          const values = await validate();
          setModalProps({ confirmLoading: true });
          let ret: any;
          if (!unref(isUpdate)) {
          ret = await add@(@Model.ClassName)(values);
          } else {
          ret = await update@(@Model.ClassName)(values);
          }

          if (ret != null) {
            if (ret.code == 204) {
              closeModal();
              success(ret.message);
            } else {
              warning(ret.message + ret.message[0].messages);
              }
            } else {
              error('未知错误');
            }
            emit('success');
          } finally {
            setModalProps({ confirmLoading: false });
          }
        }
      return { registerModal, registerForm, getTitle, handleSubmit };
      },
  });
</script>

