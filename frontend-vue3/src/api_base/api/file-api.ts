/* tslint:disable */
/* eslint-disable */
/**
 * Admin.NET通用权限管理平台
 * 前后端分离架构，开箱即用，紧随前沿技术。<br/><a href=\'https://gitee.com/zuohuaijun/Admin.NET/\'>https://gitee.com/zuohuaijun/Admin.NET</a>
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { defHttp } from '/@/utils/http/axios';
import { ErrorMessageMode } from '/@/utils/http/axios/types';
import { assertParamExists } from '../common';
import {
   Condition,
   DeleteFileInfoInput,
   XnRestfulResultOfIActionResult,
   XnRestfulResultOfInt64,
   XnRestfulResultOfListOfSysFile,
   XnRestfulResultOfObject,
   XnRestfulResultOfSysFile,
   } from '../models';

         /**
         * @summary删除文件
         * @param {DeleteFileInfoInput}[deleteFileInfoInput]
         */
         export function sysFileInfoDeletePost(deleteFileInfoInput?: DeleteFileInfoInput, mode: ErrorMessageMode = 'message') {
            const params = {  deleteFileInfoInput  }
            return defHttp.request<void>(
              {
                url: '/sysFileInfo/delete',
                method: 'POST',
                headers: {'Content-Type': 'application/json-patch+json'},
                params
              },
              {
                errorMessageMode: mode,
              })
         }

         /**
         * @summary获取文件详情
         * @param {number}id主键Id
         */
         export function sysFileInfoDetailGet(id: number, mode: ErrorMessageMode = 'message') {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('sysFileInfoDetailGet', 'id', id)
            const params = {  } as any
            if (id !== undefined) {
                params['Id'] = id;
            }
            return defHttp.request<XnRestfulResultOfSysFile>(
              {
                url: '/sysFileInfo/detail',
                method: 'GET',
                headers: {'Content-Type': 'application/json'},
                params
              },
              {
                errorMessageMode: mode,
              })
         }

         /**
         * @summary下载文件
         * @param {number}id主键Id
         */
         export function sysFileInfoDownloadGet(id: number, mode: ErrorMessageMode = 'message') {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('sysFileInfoDownloadGet', 'id', id)
            const params = {  } as any
            if (id !== undefined) {
                params['Id'] = id;
            }
            return defHttp.request<XnRestfulResultOfIActionResult>(
              {
                url: '/sysFileInfo/download',
                method: 'GET',
                headers: {'Content-Type': 'application/json'},
                params
              },
              {
                errorMessageMode: mode,
              })
         }

         /**
         * @summary获取文件列表
         * @param {number}[id]文件Id
         * @param {number}[fileLocation]文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）
         * @param {string}[fileBucket]文件仓库
         * @param {string}[fileOriginName]文件名称（上传时候的文件名）
         * @param {string}[fileSuffix]文件后缀
         * @param {number}[fileSizeKb]文件大小kb
         * @param {string}[fileSizeInfo]文件大小信息，计算后的
         * @param {string}[fileObjectName]存储到bucket的名称（文件唯一标识id）
         * @param {string}[filePath]存储路径
         */
         export function sysFileInfoListGet(id?: number, fileLocation?: number, fileBucket?: string, fileOriginName?: string, fileSuffix?: string, fileSizeKb?: number, fileSizeInfo?: string, fileObjectName?: string, filePath?: string, mode: ErrorMessageMode = 'message') {
            const params = {  } as any
            if (id !== undefined) {
                params['Id'] = id;
            }
            if (fileLocation !== undefined) {
                params['FileLocation'] = fileLocation;
            }
            if (fileBucket !== undefined) {
                params['FileBucket'] = fileBucket;
            }
            if (fileOriginName !== undefined) {
                params['FileOriginName'] = fileOriginName;
            }
            if (fileSuffix !== undefined) {
                params['FileSuffix'] = fileSuffix;
            }
            if (fileSizeKb !== undefined) {
                params['FileSizeKb'] = fileSizeKb;
            }
            if (fileSizeInfo !== undefined) {
                params['FileSizeInfo'] = fileSizeInfo;
            }
            if (fileObjectName !== undefined) {
                params['FileObjectName'] = fileObjectName;
            }
            if (filePath !== undefined) {
                params['FilePath'] = filePath;
            }
            return defHttp.request<XnRestfulResultOfListOfSysFile>(
              {
                url: '/sysFileInfo/list',
                method: 'GET',
                headers: {'Content-Type': 'application/json'},
                params
              },
              {
                errorMessageMode: mode,
              })
         }

         /**
         * @summary分页获取文件列表
         * @param {number}[fileLocation]文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）
         * @param {string}[fileBucket]文件仓库
         * @param {string}[fileOriginName]文件名称（上传时候的文件名）
         * @param {string}[searchValue]搜索值
         * @param {number}[pageNo]当前页码
         * @param {number}[pageSize]页码容量
         * @param {string}[searchBeginTime]搜索开始时间
         * @param {string}[searchEndTime]搜索结束时间
         * @param {string}[sortField]排序字段
         * @param {string}[sortOrder]排序方法,默认升序,否则降序(配合antd前端,约定参数为 Ascend,Dscend)
         * @param {string}[descStr]降序排序(不要问我为什么是descend不是desc，前端约定参数就是这样)
         * @param {Array<Condition>}[searchParameters]复杂查询条件
         */
         export function sysFileInfoPageGet(fileLocation?: number, fileBucket?: string, fileOriginName?: string, searchValue?: string, pageNo?: number, pageSize?: number, searchBeginTime?: string, searchEndTime?: string, sortField?: string, sortOrder?: string, descStr?: string, searchParameters?: Array<Condition>, mode: ErrorMessageMode = 'message') {
            const params = {  } as any
            if (fileLocation !== undefined) {
                params['FileLocation'] = fileLocation;
            }
            if (fileBucket !== undefined) {
                params['FileBucket'] = fileBucket;
            }
            if (fileOriginName !== undefined) {
                params['FileOriginName'] = fileOriginName;
            }
            if (searchValue !== undefined) {
                params['SearchValue'] = searchValue;
            }
            if (pageNo !== undefined) {
                params['PageNo'] = pageNo;
            }
            if (pageSize !== undefined) {
                params['PageSize'] = pageSize;
            }
            if (searchBeginTime !== undefined) {
                params['SearchBeginTime'] = searchBeginTime;
            }
            if (searchEndTime !== undefined) {
                params['SearchEndTime'] = searchEndTime;
            }
            if (sortField !== undefined) {
                params['SortField'] = sortField;
            }
            if (sortOrder !== undefined) {
                params['SortOrder'] = sortOrder;
            }
            if (descStr !== undefined) {
                params['DescStr'] = descStr;
            }
            if (searchParameters) {
                params['SearchParameters'] = searchParameters;
            }
            return defHttp.request<XnRestfulResultOfObject>(
              {
                url: '/sysFileInfo/page',
                method: 'GET',
                headers: {'Content-Type': 'application/json'},
                params
              },
              {
                errorMessageMode: mode,
              })
         }

         /**
         * @summary预览文件
         * @param {number}id主键Id
         */
         export function sysFileInfoPreviewGet(id: number, mode: ErrorMessageMode = 'message') {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('sysFileInfoPreviewGet', 'id', id)
            const params = {  } as any
            if (id !== undefined) {
                params['Id'] = id;
            }
            return defHttp.request<XnRestfulResultOfIActionResult>(
              {
                url: '/sysFileInfo/preview',
                method: 'GET',
                headers: {'Content-Type': 'application/json'},
                params
              },
              {
                errorMessageMode: mode,
              })
         }

         /**
         * @summary上传头像
         * @param {any}[file]
         */
         export function sysFileInfoUploadAvatarPost(file?: any, mode: ErrorMessageMode = 'message') {
            const params = {  file  }
            return defHttp.request<XnRestfulResultOfInt64>(
              {
                url: '/sysFileInfo/uploadAvatar',
                method: 'POST',
                headers: {'Content-Type': 'multipart/form-data'},
                params
              },
              {
                errorMessageMode: mode,
              })
         }

         /**
         * @summary上传文档
         * @param {any}[file]
         */
         export function sysFileInfoUploadDocumentPost(file?: any, mode: ErrorMessageMode = 'message') {
            const params = {  file  }
            return defHttp.request<void>(
              {
                url: '/sysFileInfo/uploadDocument',
                method: 'POST',
                headers: {'Content-Type': 'multipart/form-data'},
                params
              },
              {
                errorMessageMode: mode,
              })
         }

         /**
         * @summary上传文件
         * @param {any}[file]
         */
         export function sysFileInfoUploadPost(file?: any, mode: ErrorMessageMode = 'message') {
            const params = {  file  }
            return defHttp.request<XnRestfulResultOfInt64>(
              {
                url: '/sysFileInfo/upload',
                method: 'POST',
                headers: {'Content-Type': 'multipart/form-data'},
                params
              },
              {
                errorMessageMode: mode,
              })
         }

         /**
         * @summary上传商店图片
         * @param {any}[file]
         */
         export function sysFileInfoUploadShopPost(file?: any, mode: ErrorMessageMode = 'message') {
            const params = {  file  }
            return defHttp.request<void>(
              {
                url: '/sysFileInfo/uploadShop',
                method: 'POST',
                headers: {'Content-Type': 'multipart/form-data'},
                params
              },
              {
                errorMessageMode: mode,
              })
         }
