/* tslint:disable */
/* eslint-disable */
/**
 * Admin.NET通用权限管理平台
 * 前后端分离架构，开箱即用，紧随前沿技术。<br/><a href=\'https://gitee.com/zuohuaijun/Admin.NET/\'>https://gitee.com/zuohuaijun/Admin.NET</a>
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { defHttp } from '/@/utils/http/axios';
import { ErrorMessageMode } from '/@/utils/http/axios/types';
import { assertParamExists } from '../common';
import {
   AddPosInput,
   DeletePosInput,
   UpdatePosInput,
   XnRestfulResultOfObject,
   XnRestfulResultOfSysPos,
   } from '../models';

         /**
         * @summary增加职位
         * @param {AddPosInput}[addPosInput]
         */
         export function sysPosAddPost(addPosInput?: AddPosInput, mode: ErrorMessageMode = 'message') {
            const params = {  addPosInput  }
            return defHttp.request<void>(
              {
                url: '/sysPos/add',
                method: 'POST',
                headers: {'Content-Type': 'application/json-patch+json'},
                params
              },
              {
                errorMessageMode: mode,
              })
         }

         /**
         * @summary删除职位
         * @param {DeletePosInput}[deletePosInput]
         */
         export function sysPosDeletePost(deletePosInput?: DeletePosInput, mode: ErrorMessageMode = 'message') {
            const params = {  deletePosInput  }
            return defHttp.request<void>(
              {
                url: '/sysPos/delete',
                method: 'POST',
                headers: {'Content-Type': 'application/json-patch+json'},
                params
              },
              {
                errorMessageMode: mode,
              })
         }

         /**
         * @summary获取职位
         * @param {number}id主键Id
         */
         export function sysPosDetailGet(id: number, mode: ErrorMessageMode = 'message') {
            // verify required parameter 'id' is not null or undefined
            assertParamExists('sysPosDetailGet', 'id', id)
            const params = {  } as any
            if (id !== undefined) {
                params['Id'] = id;
            }
            return defHttp.request<XnRestfulResultOfSysPos>(
              {
                url: '/sysPos/detail',
                method: 'GET',
                headers: {'Content-Type': 'application/json'},
                params
              },
              {
                errorMessageMode: mode,
              })
         }

         /**
         * @summary更新职位
         * @param {UpdatePosInput}[updatePosInput]
         */
         export function sysPosEditPost(updatePosInput?: UpdatePosInput, mode: ErrorMessageMode = 'message') {
            const params = {  updatePosInput  }
            return defHttp.request<void>(
              {
                url: '/sysPos/edit',
                method: 'POST',
                headers: {'Content-Type': 'application/json-patch+json'},
                params
              },
              {
                errorMessageMode: mode,
              })
         }

         /**
         * @summary获取职位列表
         * @param {string}[name]名称
         * @param {string}[code]编码
         * @param {number}[sort]排序
         * @param {string}[remark]备注
         * @param {number}[status]状态（字典 0正常 1停用 2删除）
         * @param {number}[pageNo]当前页码
         * @param {number}[pageSize]页码容量
         */
         export function sysPosListGet(name?: string, code?: string, sort?: number, remark?: string, status?: number, pageNo?: number, pageSize?: number, mode: ErrorMessageMode = 'message') {
            const params = {  } as any
            if (name !== undefined) {
                params['Name'] = name;
            }
            if (code !== undefined) {
                params['Code'] = code;
            }
            if (sort !== undefined) {
                params['Sort'] = sort;
            }
            if (remark !== undefined) {
                params['Remark'] = remark;
            }
            if (status !== undefined) {
                params['Status'] = status;
            }
            if (pageNo !== undefined) {
                params['PageNo'] = pageNo;
            }
            if (pageSize !== undefined) {
                params['PageSize'] = pageSize;
            }
            return defHttp.request<XnRestfulResultOfObject>(
              {
                url: '/sysPos/list',
                method: 'GET',
                headers: {'Content-Type': 'application/json'},
                params
              },
              {
                errorMessageMode: mode,
              })
         }

         /**
         * @summary分页获取职位
         * @param {string}[name]名称
         * @param {string}[code]编码
         * @param {number}[sort]排序
         * @param {string}[remark]备注
         * @param {number}[status]状态（字典 0正常 1停用 2删除）
         * @param {number}[pageNo]当前页码
         * @param {number}[pageSize]页码容量
         */
         export function sysPosPageGet(name?: string, code?: string, sort?: number, remark?: string, status?: number, pageNo?: number, pageSize?: number, mode: ErrorMessageMode = 'message') {
            const params = {  } as any
            if (name !== undefined) {
                params['Name'] = name;
            }
            if (code !== undefined) {
                params['Code'] = code;
            }
            if (sort !== undefined) {
                params['Sort'] = sort;
            }
            if (remark !== undefined) {
                params['Remark'] = remark;
            }
            if (status !== undefined) {
                params['Status'] = status;
            }
            if (pageNo !== undefined) {
                params['PageNo'] = pageNo;
            }
            if (pageSize !== undefined) {
                params['PageSize'] = pageSize;
            }
            return defHttp.request<XnRestfulResultOfObject>(
              {
                url: '/sysPos/page',
                method: 'GET',
                headers: {'Content-Type': 'application/json'},
                params
              },
              {
                errorMessageMode: mode,
              })
         }
