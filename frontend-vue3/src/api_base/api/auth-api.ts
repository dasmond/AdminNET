/* tslint:disable */
/* eslint-disable */
/**
 * Admin.NET通用权限管理平台
 * 前后端分离架构，开箱即用，紧随前沿技术。<br/><a href=\'https://gitee.com/zuohuaijun/Admin.NET/\'>https://gitee.com/zuohuaijun/Admin.NET</a>
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { defHttp } from '/@/utils/http/axios';
import { ErrorMessageMode } from '/@/utils/http/axios/types';
import { assertParamExists } from '../common';
import {
   ClickWordCaptchaInput,
   LoginInput,
   XnRestfulResultOfBoolean,
   XnRestfulResultOfLoginOutput,
   XnRestfulResultOfString,
   } from '../models';

         /**
         * @summary校验验证码
         * @param {ClickWordCaptchaInput}[clickWordCaptchaInput]
         */
         export function captchaCheckPost(clickWordCaptchaInput?: ClickWordCaptchaInput, mode: ErrorMessageMode = 'message') {
            const params = {  clickWordCaptchaInput  }
            return defHttp.request<void>(
              {
                url: '/captcha/check',
                method: 'POST',
                headers: {'Content-Type': 'application/json-patch+json'},
                params
              },
              {
                errorMessageMode: mode,
              })
         }

         /**
         * @summary获取验证码（默认点选模式）
         */
         export function captchaGetPost(mode: ErrorMessageMode = 'message') {
            return defHttp.request<void>(
              {
                url: '/captcha/get',
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
              },
              {
                errorMessageMode: mode,
              })
         }

         /**
         * @summary获取验证码开关
         */
         export function getCaptchaOpenGet(mode: ErrorMessageMode = 'message') {
            return defHttp.request<XnRestfulResultOfBoolean>(
              {
                url: '/getCaptchaOpen',
                method: 'GET',
                headers: {'Content-Type': 'application/json'},
              },
              {
                errorMessageMode: mode,
              })
         }

         /**
         * @summary获取当前登录用户信息
         */
         export function getLoginUserGet(mode: ErrorMessageMode = 'message') {
            return defHttp.request<XnRestfulResultOfLoginOutput>(
              {
                url: '/getLoginUser',
                method: 'GET',
                headers: {'Content-Type': 'application/json'},
              },
              {
                errorMessageMode: mode,
              })
         }

         /**
         * @summary用户登录
         * @param {LoginInput}loginInput
         */
         export function loginPost(loginInput: LoginInput, mode: ErrorMessageMode = 'message') {
            // verify required parameter 'loginInput' is not null or undefined
            assertParamExists('loginPost', 'loginInput', loginInput)
            const params = {  loginInput  }
            return defHttp.request<XnRestfulResultOfString>(
              {
                url: '/login',
                method: 'POST',
                headers: {'Content-Type': 'application/json-patch+json'},
                params
              },
              {
                errorMessageMode: mode,
              })
         }

         /**
         * @summary退出
         */
         export function logoutGet(mode: ErrorMessageMode = 'message') {
            return defHttp.request<void>(
              {
                url: '/logout',
                method: 'GET',
                headers: {'Content-Type': 'application/json'},
              },
              {
                errorMessageMode: mode,
              })
         }
